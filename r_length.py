#!/usr/bin/env python

from __future__ import print_function
import argparse
import requests
import sys

'''
Very simple value incrementer for enumerating specific web pages
and returning the byte length. Tired of free burp takin' so long.
'''

inc_range = 0
url = ''
verbosity = False
output_file = ''

def incrementer():
    for increment in range(inc_range):
        live_url = url.replace('%00', str(increment))
        r = requests.get(live_url)
        length = len(r.text)

        if output_file:
            if verbosity:
                with open(output_file, 'a') as fo:
                    line = print('[+] Increment: ', increment, '==> ', length)
                    fo.write(line)
                    line = print(live_url)
                    fo.write(line)
            else:
                with open(output_file, 'a') as fo:
                    line = print('[+] Increment: ', increment, '==> ', length)
        elif verbosity:
            print('[+] Increment: ', increment, '==> ', length)
            print(live_url)
        else:
            print('[+] Increment: ', increment, '==> ', length)

def parse_dem_args():
    global inc_range
    global url
    global verbosity
    global output_file

    parser = argparse.ArgumentParser()
    parser.add_argument('target', help='target URL. add %00 where you want incrementing')
    parser.add_argument('range', help='provide range of numbers to cycle thru. ie, 1-1001')
    parser.add_argument('-v', '--verbose', action='store_true', help='verbose')
    args = parser.parse_args()

    try:
        given_range = args.range
        div_range = given_range.split('-')
        inc_range = range(div_range[0], div_range[1])
    except:
        print('Didn\'t work. Make sure the range is in the form of "1-1000"')
        sys.exit(1)

    url = args.target

    if args.verbose:
        verbosity = args.verbose
    if args.output:
        output_file = args.output

if __name__ == '__main__':
    incrementer()
